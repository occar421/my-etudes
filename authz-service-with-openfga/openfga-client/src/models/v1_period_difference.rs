/*
 * OpenFGA
 *
 * A high performance and flexible authorization/permission engine built for developers and inspired by Google Zanzibar.
 *
 * The version of the OpenAPI document: 1.x
 * Contact: community@openfga.dev
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct V1PeriodDifference {
    #[serde(rename = "base")]
    pub base: Box<models::Userset>,
    #[serde(rename = "subtract")]
    pub subtract: Box<models::Userset>,
}

impl V1PeriodDifference {
    pub fn new(base: models::Userset, subtract: models::Userset) -> V1PeriodDifference {
        V1PeriodDifference {
            base: Box::new(base),
            subtract: Box::new(subtract),
        }
    }
}

