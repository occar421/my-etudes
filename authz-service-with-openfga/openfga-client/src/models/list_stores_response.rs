/*
 * OpenFGA
 *
 * A high performance and flexible authorization/permission engine built for developers and inspired by Google Zanzibar.
 *
 * The version of the OpenAPI document: 1.x
 * Contact: community@openfga.dev
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ListStoresResponse {
    #[serde(rename = "stores")]
    pub stores: Vec<models::Store>,
    /// The continuation token will be empty if there are no more stores.
    #[serde(rename = "continuation_token")]
    pub continuation_token: String,
}

impl ListStoresResponse {
    pub fn new(stores: Vec<models::Store>, continuation_token: String) -> ListStoresResponse {
        ListStoresResponse {
            stores,
            continuation_token,
        }
    }
}

