/*
 * OpenFGA
 *
 * A high performance and flexible authorization/permission engine built for developers and inspired by Google Zanzibar.
 *
 * The version of the OpenAPI document: 1.x
 * Contact: community@openfga.dev
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TupleChange {
    #[serde(rename = "tuple_key")]
    pub tuple_key: Box<models::TupleKey>,
    #[serde(rename = "operation")]
    pub operation: models::TupleOperation,
    #[serde(rename = "timestamp")]
    pub timestamp: String,
}

impl TupleChange {
    pub fn new(tuple_key: models::TupleKey, operation: models::TupleOperation, timestamp: String) -> TupleChange {
        TupleChange {
            tuple_key: Box::new(tuple_key),
            operation,
            timestamp,
        }
    }
}

