/*
 * OpenFGA
 *
 * A high performance and flexible authorization/permission engine built for developers and inspired by Google Zanzibar.
 *
 * The version of the OpenAPI document: 1.x
 * Contact: community@openfga.dev
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// TypedWildcard : Type bound public access.  Normally represented using the `<type>:*` syntax  `employee:*` represents every object of type `employee`, including those not currently present in the system  See https://openfga.dev/docs/concepts#what-is-type-bound-public-access
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TypedWildcard {
    #[serde(rename = "type")]
    pub r#type: String,
}

impl TypedWildcard {
    /// Type bound public access.  Normally represented using the `<type>:*` syntax  `employee:*` represents every object of type `employee`, including those not currently present in the system  See https://openfga.dev/docs/concepts#what-is-type-bound-public-access
    pub fn new(r#type: String) -> TypedWildcard {
        TypedWildcard {
            r#type,
        }
    }
}

