/*
 * OpenFGA
 *
 * A high performance and flexible authorization/permission engine built for developers and inspired by Google Zanzibar.
 *
 * The version of the OpenAPI document: 1.x
 * Contact: community@openfga.dev
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct BatchCheckResponse {
    /// map keys are the correlation_id values from the BatchCheckItems in the request
    #[serde(rename = "result", skip_serializing_if = "Option::is_none")]
    pub result: Option<std::collections::HashMap<String, models::BatchCheckSingleResult>>,
}

impl BatchCheckResponse {
    pub fn new() -> BatchCheckResponse {
        BatchCheckResponse {
            result: None,
        }
    }
}

